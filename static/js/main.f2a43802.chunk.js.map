{"version":3,"sources":["context/MaskDataContext.js","components/AppNav.js","components/LoadOptions.js","components/RemainingStockBadge.js","hooks/useNaverMapsMarkers.js","hooks/useNaverMaps.js","components/MapPanel.js","components/MaskStoreTable2.js","components/MaskMap.js","components/MaskStatus.js","App.js","serviceWorker.js","i18n.js","index.js","assets/MaskMapLogo.svg","assets/MaskMapIntro.svg"],"names":["MaskDataContext","createContext","mapObj","setMapObj","maskStores","setMaskStores","centerCoord","setCenterCoord","markerFilter","plenty","some","few","empty","setMarkerFilter","MaskDataContextProvider","children","useState","Provider","value","useMaskData","context","useContext","undefined","Error","AppNav","useTranslation","t","i18n","Navbar","bg","expand","className","Brand","href","src","MaskMapLogo","width","alt","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","onClick","changeLanguage","Link","icon","faChartArea","size","faGithub","LoadOptions","geoloc","useGeolocation","geolocState","setGeolocState","geolocWhenAvailable","setGeolocWhenAvailable","address","setAddress","fetchGeocode","a","axios","get","data","console","error","log","useEffect","localStorage","getItem","navigator","permissions","query","name","then","result","state","accuracy","latitude","longitude","coord","lat","lng","onClickAddress","length","alert","setItem","geocodes","meta","totalCount","addresses","y","x","Container","Row","Col","MaskMapIntro","sm","md","lg","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","type","placeholder","onChange","target","Text","Button","variant","faSearch","faLocationArrow","RemainingStockBadge","text","remainingStockStr","Badge","useNaverMapsMarkers","markers","setMarkers","plentyMarkers","setPlentyMarkers","someMarkers","setSomeMarkers","fewMarkers","setFewMarkers","emptyMarkers","setEmptyMarkers","breakMarkers","setBreakMarkers","addColorIndicatorMarkers","useCallback","map","stores","window","naver","maps","_plentyMarkers","_someMarkers","_fewMarkers","_emptyMarkers","_breakMarkers","forEach","store","iconPath","remain_stat","marker","Marker","position","url","Size","infoWindowHTML","addr","ReactDOMServer","renderToString","infoWindow","InfoWindow","content","Event","addListener","open","push","resetMarker","setMap","addMarker","oldArray","useNaverMaps","ref","options","center","zoom","zoomControl","disableDoubleClickZoom","current","Map","MapPanel","mapRef","useRef","loadMap","style","minHeight","height","maxHeight","MaskStoreTable2","Table","responsive","MaskMap","isLoading","setIsLoading","dataError","setDataError","showBetaAlert","setShowBetaAlert","setNewMaskStores","priority","sort","b","indexOf","markerFilterCheckboxHandler","prev","checked","fetchStoresByGeo","loc","range","serverUrl","fn","setCenter","setZoom","Alert","onClose","dismissible","faExclamationTriangle","block","newCenter","getCenter","class","disabled","defaultChecked","for","Spinner","animation","role","overflow","MaskStatus","App","fallback","Boolean","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f2a43802.chunk.js","sourcesContent":["import React, { useState, useContext, createContext, useEffect } from \"react\";\n\nexport const MaskDataContext = createContext({\n    mapObj: null,\n    setMapObj: () => {},\n    maskStores: {},\n    setMaskStores: () => {},\n    centerCoord: null,\n    setCenterCoord: () => {},\n    markerFilter: {\n        plenty: true,\n        some: true,\n        few: true,\n        empty: false\n    },\n    setMarkerFilter: () => {}\n});\n\nexport function MaskDataContextProvider({ children }) {\n    const [mapObj, setMapObj] = useState(null);\n    const [maskStores, setMaskStores] = useState([]);\n    const [centerCoord, setCenterCoord] = useState(null);\n    const [markerFilter, setMarkerFilter] = useState({\n        plenty: true,\n        some: true,\n        few: true,\n        empty: false\n    });\n\n    return (\n        <MaskDataContext.Provider\n            value={{\n                mapObj,\n                setMapObj,\n                maskStores,\n                setMaskStores,\n                centerCoord,\n                setCenterCoord,\n                markerFilter,\n                setMarkerFilter\n            }}>\n            {children}\n        </MaskDataContext.Provider>\n    );\n}\n\nexport function useMaskData() {\n    const context = useContext(MaskDataContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMaskData must be used within a MaskDataContextProvider\");\n    }\n    return context;\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faChartArea } from \"@fortawesome/free-solid-svg-icons\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport MaskMapLogo from \"../assets/MaskMapLogo.svg\";\n\nfunction AppNav() {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" className=\"mb-3 navbar-mobile-thin\">\n            <Navbar.Brand href=\"/\">\n                <img src={MaskMapLogo} width=\"24px\" alt=\"공적 마스크 지도 로고\" className=\"mr-2\"/>\n                 {t(\"appName\")}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <NavDropdown title=\"🌐 Language\">\n                        <NavDropdown.Item\n                            onClick={() => i18n.changeLanguage(\"ko\")}>\n                            한국어\n                        </NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => i18n.changeLanguage(\"en\")}>\n                            English\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"https://livecorona.co.kr\">\n                        <FontAwesomeIcon icon={faChartArea} size=\"lg\" /> {t(\"covid19Dashboard\")}\n                    </Nav.Link>\n                    <Nav.Link href=\"https://github.com/LiveCoronaDetector/\">\n                        <FontAwesomeIcon icon={faGithub} size=\"lg\" /> {t(\"github\")}\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default AppNav;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport useGeolocation from \"react-hook-geolocation\";\nimport { useMaskData } from \"../context/MaskDataContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faLocationArrow } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport MaskMapIntro from \"../assets/MaskMapIntro.svg\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction LoadOptions() {\n    const geoloc = useGeolocation();\n    const [geolocState, setGeolocState] = useState(null);\n    const [geolocWhenAvailable, setGeolocWhenAvailable] = useState(false);\n    const { centerCoord, setCenterCoord } = useMaskData();\n\n    const { t } = useTranslation();\n\n    const [address, setAddress] = useState(\"\");\n\n    const fetchGeocode = async (address) => {\n        let data;\n        try {\n            data = await axios.get(\n                `${\n                    process.env.NODE_ENV === \"development\"\n                        ? \"http://localhost:4000\"\n                        : \"https://api.livecorona.co.kr\"\n                }/?address=${address}`\n            );\n            return data;\n        } catch (error) {\n            console.error(error);\n            console.log(\"Failed to retrieve geocoding for: \" + address);\n        }\n    };\n\n    useEffect(() => {\n        setAddress(localStorage.getItem(\"lastSearchedAddress\"));\n    }, []);\n\n    useEffect(() => {\n        if (!geoloc) {\n            return;\n        }\n\n        // navigator.permissions is an experimental API that is\n        // unsupported in iOS, so it needs a try-catch block\n        try {\n            navigator.permissions\n                .query({ name: \"geolocation\" })\n                .then((result) => {\n                    setGeolocState(result.state);\n                });\n        } catch (error) {\n            console.error(error);\n            setGeolocState(\"unknown\");\n        }\n\n        if (geolocWhenAvailable) {\n            if (\n                geoloc.accuracy != null ||\n                geoloc.latitude != null ||\n                geoloc.longitude != null\n            ) {\n                const coord = {\n                    lat: geoloc.latitude,\n                    lng: geoloc.longitude\n                };\n                setCenterCoord(coord);\n                console.log(coord);\n            }\n        }\n    }, [geoloc, geolocWhenAvailable, setCenterCoord]);\n\n    const onClickGeoloc = () => {\n        if (geolocState !== \"granted\") {\n            alert(\"위치 권한을 브라우저 설정에서 허용해야 사용할 수 있습니다\");\n        }\n\n        setGeolocWhenAvailable(true);\n    };\n\n    const onClickAddress = async () => {\n        if (address.length < 1) {\n            alert(\"주소를 입력해 주세요.\");\n            return;\n        }\n\n        localStorage.setItem(\"lastSearchedAddress\", address);\n\n        let geocodes;\n        try {\n            geocodes = await fetchGeocode(address);\n        } catch (error) {\n            console.error(error);\n            alert(\"주소를 찾을 수 없습니다. 다시 시도해 주십시오.\");\n            return;\n        }\n\n        console.log(geocodes.data);\n\n        if (!geocodes.data.meta.totalCount) {\n            alert(\"주소를 찾을 수 없습니다. 다시 시도해 주십시오.\");\n            return;\n        }\n\n        let coord = {\n            lat: geocodes.data.addresses[0].y,\n            lng: geocodes.data.addresses[0].x\n        };\n\n        setCenterCoord(coord);\n    };\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        onClickAddress();\n    };\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"text-center mb-5\">\n                            <img\n                                src={MaskMapIntro}\n                                alt=\"공적 마스크 판매처\"\n                                width=\"100vw\"\n                                className=\"mb-3\"\n                            />\n                            <h1>{t(\"searchMaskStores\")}</h1>\n                        </div>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center mb-3 text-center\">\n                    <Col sm={12} md={6} lg={5}>\n                        <Form onSubmit={handleFormSubmit}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>\n                                    {t(\"addressInputLabel\")}\n                                </Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"\"\n                                    value={address}\n                                    onChange={(e) => setAddress(e.target.value)}\n                                />\n                                <Form.Text className=\"text-muted\">\n                                    {t(\"addressInputExample\")}\n                                </Form.Text>\n                            </Form.Group>\n                            <div className=\"d-flex flex-column\">\n                                <Button\n                                    variant=\"primary\"\n                                    className=\"mb-2\"\n                                    onClick={onClickAddress}>\n                                    <FontAwesomeIcon icon={faSearch} />{\" \"}\n                                    {t(\"searchByAddress\")}\n                                </Button>\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={onClickGeoloc}>\n                                    <FontAwesomeIcon icon={faLocationArrow} />{\" \"}\n                                    {t(\"searchByGeoloc\")}\n                                </Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default LoadOptions;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction RemainingStockBadge({ remainingStockStr }) {\n    const { t } = useTranslation();\n    let variant;\n    let text;\n\n    switch (remainingStockStr) {\n        case \"plenty\":\n            variant = \"success\";\n            text = t(\"badge.plenty\");\n            break;\n        case \"some\":\n            variant = \"warning\";\n            text = t(\"badge.some\");\n            break;\n        case \"few\":\n            variant = \"danger\";\n            text = t(\"badge.few\");\n            break;\n        case \"empty\":\n            variant = \"light\";\n            text = t(\"badge.empty\");\n            break;\n        case \"break\":\n            variant = \"secondary\";\n            text = t(\"badge.break\");\n            break;\n        default:\n            variant = \"light\";\n            text = \"?\";\n    }\n    return <Badge variant={variant}>{text}</Badge>;\n}\n\nexport default RemainingStockBadge;\n","import React, { useCallback, useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport RemainingStockBadge from \"../components/RemainingStockBadge\";\nimport { useMaskData } from \"../context/MaskDataContext\";\n\nconst useNaverMapsMarkers = () => {\n    const [markers, setMarkers] = useState([]);\n    const [plentyMarkers, setPlentyMarkers] = useState([]);\n    const [someMarkers, setSomeMarkers] = useState([]);\n    const [fewMarkers, setFewMarkers] = useState([]);\n    const [emptyMarkers, setEmptyMarkers] = useState([]);\n    const [breakMarkers, setBreakMarkers] = useState([]);\n\n    const { markerFilter } = useMaskData();\n\n    const addMarker = (map, data) => {\n        if (!window.naver && !window.naver.maps) {\n            return;\n        }\n\n        const marker = new window.naver.maps.Marker({\n            map: map,\n            position: {\n                lat: data.lat,\n                lng: data.lng\n            }\n        });\n\n        const infoWindowHTML = `\n            <div style=\"font-size: 0.1rem; padding: 15px;\">\n                <h5 style=\"font-size: 13px\">${data.name}</h5>\n                <p>${data.addr}<br />\n                남은 수량: ${ReactDOMServer.renderToString(\n                    <RemainingStockBadge remainingStockStr={data.remain_stat} />\n                )}</p>\n            </div>`;\n\n        const infoWindow = new window.naver.maps.InfoWindow({\n            content: infoWindowHTML\n        });\n\n        // mouseover event unsupported in touch devices (mobile)\n        window.naver.maps.Event.addListener(marker, \"mouseover\", function(e) {\n            infoWindow.open(map, marker);\n        });\n\n        window.naver.maps.Event.addListener(marker, \"click\", function(e) {\n            infoWindow.open(map, marker);\n        });\n\n        setMarkers((oldArray) => [...oldArray, marker]);\n    };\n\n    const addColorIndicatorMarkers = useCallback(\n        (map, stores) => {\n            if (!window.naver && !window.naver.maps) {\n                return;\n            }\n\n            let _plentyMarkers = [];\n            let _someMarkers = [];\n            let _fewMarkers = [];\n            let _emptyMarkers = [];\n            let _breakMarkers = [];\n\n            stores.forEach((store) => {\n                let iconPath;\n                if (\n                    store.remain_stat === undefined ||\n                    store.remain_stat === null ||\n                    store.remain_stat === \"empty\" ||\n                    store.remain_stat === \"break\"\n                ) {\n                    return;\n                }\n\n                switch (store.remain_stat) {\n                    case \"plenty\":\n                        iconPath = \"green_circle.png\";\n                        break;\n                    case \"some\":\n                        iconPath = \"yellow_circle.png\";\n                        break;\n                    case \"few\":\n                        iconPath = \"red_circle.png\";\n                        break;\n                    case \"empty\":\n                        iconPath = \"gray_circle.png\";\n                        break;\n                    case \"break\":\n                        iconPath = \"gray_circle.png\";\n                        break;\n                    default:\n                        iconPath = \"gray_circle.png\";\n                }\n\n                const marker = new window.naver.maps.Marker({\n                    map: map,\n                    position: {\n                        lat: store.lat,\n                        lng: store.lng\n                    },\n                    icon: {\n                        url: `./${iconPath}`,\n                        size: new window.naver.maps.Size(10, 10)\n                    }\n                });\n\n                const infoWindowHTML = `\n            <div style=\"font-size: 0.85rem; padding: 5px; width: 200px !important;\">\n                <h5 style=\"font-size: 1rem\">${store.name}</h5>\n                <p className=\"mb-0 pb-0\">${store.addr}<br />\n                남은 수량: ${ReactDOMServer.renderToString(\n                    <RemainingStockBadge\n                        remainingStockStr={store.remain_stat}\n                    />\n                )} | <a href=\"https://map.naver.com/v5/search/${\n                    store.name\n                }\" target=\"_blank\" rel=\"noopener noreferrer\"\n                >길찾기</a> </p>\n            </div>`;\n\n                const infoWindow = new window.naver.maps.InfoWindow({\n                    content: infoWindowHTML\n                });\n\n                // mouseover event unsupported in touch devices (mobile)\n                window.naver.maps.Event.addListener(\n                    marker,\n                    \"mouseover\",\n                    function(e) {\n                        infoWindow.open(map, marker);\n                    }\n                );\n\n                window.naver.maps.Event.addListener(marker, \"click\", function(\n                    e\n                ) {\n                    infoWindow.open(map, marker);\n                });\n\n                switch (store.remain_stat) {\n                    case \"plenty\":\n                        _plentyMarkers.push(marker);\n                        break;\n                    case \"some\":\n                        _someMarkers.push(marker);\n                        break;\n                    case \"few\":\n                        _fewMarkers.push(marker);\n                        break;\n                    case \"empty\":\n                        _emptyMarkers.push(marker);\n                        break;\n                    case \"break\":\n                        _breakMarkers.push(marker);\n                        break;\n                    default:\n                        _emptyMarkers.push(marker);\n                }\n            });\n            resetMarker();\n            setPlentyMarkers(_plentyMarkers);\n            setSomeMarkers(_someMarkers);\n            setFewMarkers(_fewMarkers);\n            setEmptyMarkers(_fewMarkers);\n            setBreakMarkers(_fewMarkers);\n        },\n        [markerFilter]\n    );\n\n    const resetMarker = useCallback(() => {\n        markers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        plentyMarkers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        fewMarkers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        someMarkers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        emptyMarkers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        breakMarkers.forEach((marker) => {\n            marker.setMap(null);\n        });\n        setMarkers([]);\n    }, [markers, plentyMarkers, fewMarkers, someMarkers, emptyMarkers, breakMarkers]);\n\n    return {\n        addMarker,\n        addColorIndicatorMarkers,\n        resetMarker\n    };\n};\n\nexport default useNaverMapsMarkers;\n","import { useCallback } from \"react\";\n\nconst useNaverMaps = () => {\n    return useCallback((ref, options) => {\n        options = {\n            center: {\n                lat: 36.377165,\n                lng: 127.533382\n            },\n            zoom: 1,\n            zoomControl: true,\n            disableDoubleClickZoom: true\n        };\n\n        if (window.naver && ref.current) {\n            return new window.naver.maps.Map(ref.current, options);\n        }\n\n    }, []);\n};\n\nexport default useNaverMaps;\n","import React, { useRef, useEffect } from \"react\";\nimport useNaverMaps from \"../hooks/useNaverMaps\";\nimport { useMaskData } from \"../context/MaskDataContext\";\n\nfunction MapPanel() {\n    const { setMapObj } = useMaskData();\n    const mapRef = useRef();\n    const loadMap = useNaverMaps();\n\n    useEffect(() => {\n        setMapObj(loadMap(mapRef));\n    }, []);\n\n    return (\n        <>\n            <div\n                id=\"map\"\n                ref={mapRef}\n                style={{ minHeight: \"45vh\", height: \"45vh\", maxHeight: \"65vh\" }}\n            />\n        </>\n    );\n}\n\nexport default MapPanel;\n","import React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMaskData } from \"../context/MaskDataContext\";\nimport { useTable, useBlockLayout } from \"react-table\";\nimport { Table } from \"react-bootstrap\";\nimport RemainingStockBadge from \"./RemainingStockBadge\";\n\nfunction MaskStoreTable2() {\n    const { t } = useTranslation();\n    const { maskStores } = useMaskData();\n\n    return (\n        <>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>{t(\"storeData.name\")}</th>\n                        <th>{t(\"storeData.stockCount\")}</th>\n                        <th>{t(\"storeData.address\")}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {maskStores.map((store) => {\n                        return (\n                            <tr>\n                                <td>{store.name}</td>\n                                <td>{<RemainingStockBadge remainingStockStr={store.remain_stat} />}</td>\n                                <td>{store.addr}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </>\n    );\n}\n\nexport default MaskStoreTable2;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Alert, Container, Row, Col, Spinner, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faExclamationTriangle,\n    faLocationArrow\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport useNaverMapsMarkers from \"../hooks/useNaverMapsMarkers\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMaskData } from \"../context/MaskDataContext\";\nimport MapPanel from \"./MapPanel\";\nimport RemainingStockBadge from \"./RemainingStockBadge\";\nimport MaskStoreTable2 from \"./MaskStoreTable2\";\n\nfunction MaskMap() {\n    const { t, i18n } = useTranslation();\n\n    useEffect(() => {\n        i18n.changeLanguage(\"ko\");\n    }, []);\n\n    const {\n        mapObj,\n        maskStores,\n        setMaskStores,\n        centerCoord,\n        setCenterCoord\n    } = useMaskData();\n    const {\n        addMarker,\n        addColorIndicatorMarkers,\n        resetMarker\n    } = useNaverMapsMarkers();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [dataError, setDataError] = useState(false);\n    const [showBetaAlert, setShowBetaAlert] = useState(true);\n\n    const [markerFilter, setMarkerFilter] = useState({\n        plenty: true,\n        some: true,\n        few: true,\n        empty: false\n    });\n\n    const setNewMaskStores = useCallback(\n        (data) => {\n            const priority = [\n                \"plenty\",\n                \"some\",\n                \"few\",\n                \"empty\",\n                \"break\",\n                null,\n                undefined\n            ];\n            data.sort(\n                (a, b) =>\n                    priority.indexOf(a.remain_stat) -\n                    priority.indexOf(b.remain_stat)\n            );\n            setMaskStores(data);\n        },\n        [setMaskStores]\n    );\n\n    const markerFilterCheckboxHandler = (e) => {\n        let target = e.target;\n        console.log(target);\n        setMarkerFilter((prev) => {\n            return {\n                ...prev,\n                [target.name]: target.checked\n            };\n        });\n    };\n\n    useEffect(() => {\n        console.log(markerFilter);\n    }, [markerFilter]);\n\n    const checkInStock = (remainStat) => {\n        switch (remainStat) {\n            case \"plenty\":\n                return true;\n            case \"some\":\n                return true;\n            case \"few\":\n                return true;\n            case \"empty\":\n                return false;\n            case \"break\":\n                return false;\n            default:\n                return false;\n        }\n    };\n\n    useEffect(() => {\n        const fetchStoresByGeo = async (loc, range) => {\n            const serverUrl = `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${loc.lat}&lng=${loc.lng}&m=${range}`;\n\n            let result;\n            try {\n                setIsLoading(true);\n                result = await axios(serverUrl);\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"An error occurred in fetchStoresByGeo:\", error);\n                setDataError(true);\n                setIsLoading(false);\n                throw Error(\"Failed\");\n            }\n            return result.data.stores;\n        };\n\n        const fn = async () => {\n            resetMarker();\n            console.log(\"Fetching store data...\");\n            let data;\n            try {\n                data = await fetchStoresByGeo(centerCoord, 5000);\n                console.log(`New store data fetched`);\n                console.log(data);\n                resetMarker();\n                setNewMaskStores(data);\n            } catch {\n                console.error(\"Failed to fetch data\");\n            }\n        };\n\n        fn();\n    }, [centerCoord, setNewMaskStores]);\n\n    useEffect(() => {\n        if (mapObj) {\n            mapObj.setCenter(centerCoord);\n            mapObj.setZoom(14);\n        }\n    }, [mapObj, centerCoord]);\n\n    useEffect(() => {\n        if (!mapObj) {\n            return;\n        }\n\n        addColorIndicatorMarkers(mapObj, maskStores);\n    }, [maskStores]);\n\n    const onClickMapRelocate = () => {\n        const newCenter = mapObj.getCenter();\n        setCenterCoord({\n            lat: newCenter.y,\n            lng: newCenter.x\n        });\n    };\n\n    return (\n        <>\n            <main>\n                <Container id=\"mainContainer\">\n                    <Row>\n                        <Col sm={12}>\n                            {showBetaAlert && (\n                                <Alert\n                                    variant=\"warning\"\n                                    onClose={() => setShowBetaAlert(false)}\n                                    dismissible>\n                                    <FontAwesomeIcon\n                                        icon={faExclamationTriangle}\n                                    />{\" \"}\n                                    {t(\"notice.apiIsInBeta\")}\n                                </Alert>\n                            )}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <MapPanel />\n                            <Button\n                                variant=\"outline-primary\"\n                                className=\"mt-1 mb-1\"\n                                block\n                                onClick={onClickMapRelocate}>\n                                <FontAwesomeIcon icon={faLocationArrow} />{\" \"}\n                                {t(\"refreshMapStores\")}\n                            </Button>\n                        </Col>\n                        <Col md={6}>\n                            {dataError && (\n                                <Alert variant=\"danger\" className=\"mt-1\">\n                                    <FontAwesomeIcon\n                                        icon={faExclamationTriangle}\n                                    />{\" \"}\n                                    {t(\"error.failedToLoadData\")}\n                                </Alert>\n                            )}\n                            <div className=\"border p-1 mb-1 d-flex flex-row justify-content-between\">\n                                <div class=\"form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        disabled\n                                        class=\"form-check-input\"\n                                        id=\"showPlentyStores\"\n                                        name=\"plenty\"\n                                        defaultChecked={markerFilter.plenty}\n                                        value={markerFilter.plenty}\n                                        onChange={markerFilterCheckboxHandler}\n                                    />\n                                    <label\n                                        class=\"form-check-label\"\n                                        for=\"showPlentyStores\">\n                                        <RemainingStockBadge remainingStockStr=\"plenty\" />{\" \"}\n                                        100개 +\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        disabled\n                                        class=\"form-check-input\"\n                                        id=\"showSomeStores\"\n                                        name=\"some\"\n                                        defaultChecked={markerFilter.some}\n                                        value={markerFilter.some}\n                                        onChange={markerFilterCheckboxHandler}\n                                    />\n                                    <label\n                                        class=\"form-check-label\"\n                                        for=\"showSomeStores\">\n                                        <RemainingStockBadge remainingStockStr=\"some\" />{\" \"}\n                                        30-100\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        disabled\n                                        class=\"form-check-input\"\n                                        id=\"showFewStores\"\n                                        name=\"few\"\n                                        defaultChecked={markerFilter.few}\n                                        value={markerFilter.few}\n                                        onChange={markerFilterCheckboxHandler}\n                                    />\n                                    <label\n                                        class=\"form-check-label\"\n                                        for=\"showFewStores\">\n                                        <RemainingStockBadge remainingStockStr=\"few\" />{\" \"}\n                                        2-30\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        disabled\n                                        class=\"form-check-input\"\n                                        id=\"showEmptyStores\"\n                                        name=\"empty\"\n                                        defaultChecked={markerFilter.empty}\n                                        value={markerFilter.empty}\n                                        onChange={markerFilterCheckboxHandler}\n                                    />\n                                    <label\n                                        class=\"form-check-label\"\n                                        for=\"showEmptyStores\">\n                                        <RemainingStockBadge remainingStockStr=\"empty\" />{\" \"}\n                                        0개\n                                    </label>\n                                </div>\n                            </div>\n\n                            {isLoading ? (\n                                <Spinner animation=\"border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner>\n                            ) : maskStores && maskStores.length ? (\n                                <>\n                                    <MaskStoreTable2\n                                        style={{\n                                            overflow: \"auto\",\n                                            maxHeight: \"100px\"\n                                        }}\n                                    />\n                                </>\n                            ) : (\n                                <Alert variant=\"danger\">\n                                    주변에 마스크 판매처가 없습니다. 지도를\n                                    이동한 후 지도 아래의 재검색 버튼을 이용해\n                                    주세요.\n                                </Alert>\n                            )}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    );\n}\n\nexport default MaskMap;\n","import React, { useEffect } from \"react\";\nimport { useMaskData } from \"../context/MaskDataContext\";\nimport LoadOptions from \"./LoadOptions\";\nimport MaskMap from \"./MaskMap\";\n\nfunction MaskStatus() {\n    const { centerCoord, setCenterCoord } = useMaskData();\n\n    /* useEffect(() => {\n        console.log(centerCoord);\n        setCenterCoord({\n            lat: 37.503939,\n            lng: 127.052462\n        });\n    }, []); */\n    return <>{!centerCoord ? <LoadOptions /> : <MaskMap />}</>;\n}\n\nexport default MaskStatus;\n","import React, { Suspense } from \"react\";\nimport { MaskDataContextProvider } from \"./context/MaskDataContext\";\nimport AppNav from \"./components/AppNav\";\nimport MaskStatus from \"./components/MaskStatus\";\n\nfunction App() {\n\n    return (\n        // TODO: needs a better fallback\n        <Suspense fallback={<div></div>}>\n            <MaskDataContextProvider>\n                <header className=\"App-header\">\n                    <AppNav />\n                </header>\n                <MaskStatus />\n            </MaskDataContextProvider>\n        </Suspense>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n    // load translation using xhr -> see /public/locales\n    // learn more: https://github.com/i18next/i18next-xhr-backend\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: \"ko\",\n        debug: false,\n\n        interpolation: {\n            escapeValue: false // not needed for react as it escapes by default\n        }\n    });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./i18n\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/MaskMapLogo.b988c109.svg\";","module.exports = __webpack_public_path__ + \"static/media/MaskMapIntro.146663f2.svg\";"],"sourceRoot":""}